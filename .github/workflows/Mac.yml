name: lunabase CI

on:
  push:
    branches: master
    tags: v*
  pull_request:
    branches: master
    tags: v*

jobs:
  macos-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install LightGBM
        run: |
          cd $HOME
          brew install cmake
          brew install libomp
          git clone --recursive https://github.com/microsoft/LightGBM
          cd LightGBM
          mkdir build
          cd build
          cmake ..
          make -j4
      - name: Install fftw
        run: |
          cd $HOME
          wget http://www.fftw.org/fftw-3.3.8.tar.gz
          tar -xzvf fftw-3.3.8.tar.gz
          cd fftw-3.3.8
          ./configure --prefix=${HOME}/fftw-3.3.8/
          make
          make install
          cd ${GITHUB_WORKSPACE}
      - name: Make
        run: |
             g++ -v
             make ARCH=MAC FFTW=${HOME}/fftw-3.3.8 LGBM=1 LGBM_PATH=${HOME}/LightGBM 
             tar cvzf mac-luna.tar.gz luna behead destrat
             ./luna -v
             ls -lh luna destrat
      - uses: actions/upload-artifact@v2
        with:
          name: mac-luna.tar.gz
          path: mac-luna.tar.gz
  
  release:
    runs-on: ubuntu-latest
    needs: [macos-build]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Luna_Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v2
        id: download
        with:
          path: .   
      - run: |
          echo ${{steps.download.outputs.download-path}}
          cd ${{steps.download.outputs.download-path}}
          mv mac-luna.tar.gz/mac-luna.tar.gz mac_luna.tar.gz
      - name: Upload Release Asset Mac
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mac_luna.tar.gz
          asset_name: mac_luna.tar.gz
          asset_content_type: application/gzip
